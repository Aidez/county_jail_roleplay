local Key = "X"
local TargetPart = "Torso"
local OffDelay = false

local Markers = {}
local Contraband = {
    ["Shiv"] = 1;
    ["Baton"] = 1;
    ["Climbing rope"] = 2;
    ["Keycard"] = 3;
    ["Glock 19"] = 4;
    ["Makarov"] = 4;
    ["AK-47"] = 4;
}
local LevelColors = {
    [1] = Color3.fromRGB(0,255,0);
    [2] = Color3.fromRGB(255,255,0);
    [3] = Color3.fromRGB(255,127,0);
    [4] = Color3.fromRGB(255,0,0);
}

spawn(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua", true))()
end)

if string.len(Key) == 1 then
    Key = string.upper(Key) -- this makes your key uppercase, since it needs to be uppercase.
end
if Enum.KeyCode[Key] == nil then
    return -- this is a check for if the key you entered was DOG SHIT or not
end

local mouse = game.Players.LocalPlayer:GetMouse()
local active = false

local function GetClosestPlayer()
    local LowestDistance = math.huge
    local ClosestCharacter = nil
    local Characters = {}
    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
        if v.Character ~= nil and v ~= game.Players.LocalPlayer then
            table.insert(Characters, v.Character)
        end
    end
    for i,v in pairs(Characters) do
        if v ~= nil then
            if v:FindFirstChild("HumanoidRootPart") then
                local InitialDis = (v.HumanoidRootPart.Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local Ray = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * InitialDis)
                local Part,Position = game.Workspace:FindPartOnRay(Ray, game.Workspace)
                local FinalDifference = math.floor((Position - v.HumanoidRootPart.Position).magnitude)
                if FinalDifference < LowestDistance then
                    ClosestCharacter = v
                    LowestDistance = FinalDifference
                end
            end
        end
    end
    local ClosestPlayer = game.Players:GetPlayerFromCharacter(ClosestCharacter)
    if ClosestPlayer ~= nil then
        return ClosestPlayer
    end
end

local function BackpackChanged(child, PlayerForRemoved)
    if child == nil or child.Parent == nil then
        if PlayerForRemoved == nil then
            return
        end
    end
    if not child:IsA("Tool") then
        return
    end
    if child ~= nil and child.Parent ~= nil and child.Parent:IsA("Model") then
        PlayerForRemoved = game.Players:FindFirstChild(child.Parent.Name)
    end
    wait()
    local ContrabandFound = false
    local Level = 0
    local Player = PlayerForRemoved or child.Parent.Parent
    if tostring(Player.Team) == "Department of Corrections" or tostring(Player.Team) == "Criminal" then
        return
    end
    if not Player:FindFirstChild("Backpack") then
        return
    end
    local Tools = Player.Backpack:GetChildren()
    if Player.Character ~= nil and Player.Character:FindFirstChildOfClass("Tool") then
       table.insert(Tools, Player.Character:FindFirstChildOfClass("Tool"))
    end
    for x = 1,#Tools do
        for i,v in pairs(Contraband) do
            if Tools[x].Name == tostring(i) and Level < v then
                ContrabandFound = true
                Level = v
            end
        end
    end
    for x = 1,#Tools do
        if Tools[x]:FindFirstChild("Handle") and Tools[x].Handle:FindFirstChild("ShootSound") then
            ContrabandFound = true
            Level = 4
        end
    end
    if ContrabandFound and Markers[Player.Name] ~= nil then
        Markers[Player.Name].Visible = true
        Markers[Player.Name].TextColor3 = LevelColors[Level]
    elseif ContrabandFound and Markers[child.Name] == nil and Player.Character ~= nil then
        --[[
        local box = Instance.new("BoxHandleAdornment")
        box.Parent = Player.Character.HumanoidRootPart
        box.Adornee = Player.Character.HumanoidRootPart
        local yuh = Player.Character.HumanoidRootPart.Size
        box.Size = Vector3.new(yuh.X + 0.01, yuh.Y + 0.01, yuh.Z + 0.01)
        box.AlwaysOnTop = true
        box.ZIndex = 200
        box.Color3 = LevelColors[Level]
        --]]
        
        local billgui = Instance.new('BillboardGui', Player.Character:WaitForChild("Torso",120))
        local textlab = Instance.new('TextLabel', billgui)

        billgui.Name = "ContrabandGUI"
        billgui.Adornee  = Player.Character.Torso
        billgui.AlwaysOnTop = true
        billgui.ExtentsOffset = Vector3.new(0, 0, 0)
        billgui.Size = UDim2.new(0, 5, 0, 5)

        textlab.Name = "Marker"
        textlab.BackgroundColor3 = Color3.new(255, 255, 255)
        textlab.BackgroundTransparency = 1
        textlab.BorderSizePixel = 0
        textlab.Position = UDim2.new(0, 0, 0, -40)
        textlab.Size = UDim2.new(1, 0, 10, 0)
        textlab.Visible = true
        textlab.ZIndex = 10
        textlab.Font = "ArialBold"
        textlab.FontSize = "Size18"
        textlab.Text = "CONTRABAND"
        textlab.TextColor3 = LevelColors[Level]
        textlab.TextStrokeColor3 = Color3.fromRGB(0,0,0)
        textlab.TextStrokeTransparency = 0.6
        textlab.TextSize = 10
        
        
        
        Markers[Player.Name] = textlab
    elseif not ContrabandFound and Markers[Player.Name] ~= nil then
        Markers[Player.Name].Visible = false
    end
end

local function CharacterAdded(child)
    local Player = game.Players:GetPlayerFromCharacter(child)
    Markers[Player.Name] = nil
    if Player ~= nil then
        Player.Backpack.ChildAdded:Connect(BackpackChanged)
        Player.Backpack.ChildRemoved:Connect(function(removed)
            BackpackChanged(removed, Player)
        end)
        child.ChildRemoved:Connect(function(removed)
            BackpackChanged(removed, Player)
        end)
    end
    wait(1)
    if Player.Backpack:FindFirstChildOfClass("Tool") then
        BackpackChanged(Player.Backpack:FindFirstChildOfClass("Tool"))
    elseif Player.Character ~= nil and Player.Character:FindFirstChildOfClass("Tool") then
        BackpackChanged(Player.Character:FindFirstChildOfClass("Tool"))
     end
end

local function PlayerAdded(child)
    repeat wait() until child:FindFirstChild("Backpack")
    repeat wait() until child.Character ~= nil
    child.Backpack.ChildAdded:Connect(BackpackChanged)
    child.Backpack.ChildRemoved:Connect(function(removed)
        BackpackChanged(removed, child)
    end)
    child.Character.ChildRemoved:Connect(function(removed)
        BackpackChanged(removed, child)
    end)
    child.CharacterAdded:Connect(CharacterAdded)
end

local function PlayerRemoved(child)
    if Markers[child.Name] ~= nil then
        Markers[child.Name] = nil
    end
end

game:GetService("UserInputService").InputBegan:Connect(function(keyobject, shithappening)
    if keyobject.KeyCode == Enum.KeyCode[Key] and not shithappening then 
        active = true
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(keyobject, shithappening)
    if keyobject.KeyCode == Enum.KeyCode[Key] and not shithappening then
        if OffDelay then
            wait(0.7)
        end
        active = false
    end
end)

game:GetService('RunService').Stepped:connect(function()
    if active then
        local target = GetClosestPlayer()
        if target ~= nil and target.Team ~= game.Players.LocalPlayer.Team then
            if target.Character ~= nil then
                if target.Character:FindFirstChild(TargetPart) then
                    game.Workspace.CurrentCamera.CFrame = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, target.Character[TargetPart].CFrame.p)
                end
            end
        end
    end
end)

game.Players.PlayerAdded:Connect(PlayerAdded)
game.Players.PlayerRemoving:Connect(PlayerRemoved)

for i,v in pairs(game.Players:GetPlayers()) do
    if v ~= game.Players.LocalPlayer then
        if v.Backpack:FindFirstChildOfClass("Tool") then
            BackpackChanged(v.Backpack:FindFirstChildOfClass("Tool"))
        elseif v.Character ~= nil and v.Character:FindFirstChildOfClass("Tool") then
            BackpackChanged(v.Character:FindFirstChildOfClass("Tool"))
        end
        v.Backpack.ChildAdded:Connect(BackpackChanged)
        v.Backpack.ChildRemoved:Connect(function(removed)
            BackpackChanged(removed, v)
        end)
        if v.Character ~= nil then
            v.Character.ChildRemoved:Connect(function(removed)
                BackpackChanged(removed, v)
            end)
        end
        -- repeat wait() until v.Character ~= nil
        v.CharacterAdded:Connect(CharacterAdded)
    end
end

spawn(function()
    pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end)
end)
